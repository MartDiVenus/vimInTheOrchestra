*Valentine.txt*   For Vim version 8.2.   For Debian 11
Version 2.1.1.   Last change: 2023 jul 08 

            ------------------------------------------------
            VALENTINE REFERENCE MANUAL      by Mario Fantini
            ------------------------------------------------
Author:  Mario Fantini "MartDiVenus" <ing.mariofantini@gmail.com> 
         https://github.com/MartDiVenus/

Copyright: Mario Fantini's copyright: Creative Commons by-nc-sa-eu.
	   Bram Moolenaar's copyright  applies	to  all  Mario	Fantini's  vim
           files, see << :he copyright >>.
	   Charles E. Campbell's  copyright applies  to  all  Mario  Fantini's
	   netrw codex "brushstrokes"  and  netrw  colours  brushstrokes,  see
           Copyright (C) 2016 - Charles E. Campbell -. 
           /usr/share/vim/vim*/autoload/netrw.vim
           :he pi_netrw 
           fdisk's copyright applies to its valeparted usage.

        *Valentine*

==============================================================================
1. Contents                             *Vale-contents* {{{1

1.  Contents.....................................................|Vale-contents|
2.  Starting with Valentine.........................................|Vale-start|
3.  Settings.....................................................|Vale-settings|
      Main Settings.........................................|Vale-main_settings|
      Vim Coding Settings.............................|Vale-vim_coding_settings|
      Vimscript Settings...............................|Vale-vimscript_settings|
4.  External plugins..........................................|external_plugins|
	vim-plug......................................................|vim-plug|
        tagbar..........................................................|tagbar|
5.  Plugins loading.......................................|Vale-plugins_loading|
6.  Apps.............................................................|Vale-apps|
      Hexadecimal Vim Writing.............................|Vale-hex_vim_writing|
	 Starting with Hexadecimal Vim Writing................|Vale-hexvw_start|
      Valentine in Netrw............................................|Vale-netrw|
	 Starting with Valentine in netrw.....................|Vale-netrw_start|
	 Warnings..........................................|Vale-netrw_warnings|
         Some Notes About Official netrw.................|Vale-netrw_some_notes|	
	 Mappings..........................................|Vale-netrw_mappings|
		Help and Legend <F2>...........................|Vale-netrw_help|
		Make and write a new file [fn]...................|Vale-netrw_fn|
		Direct all files/dirs selection [fa].............|Vale-netrw_fa| 
                Direct source files/dirs remarking [fm]..........|Vale-netrw_fm|
		Direct dest dir/dirs remarking [fd]..............|Vale-netrw_fd|
		Inverse fm* selection [_fm].....................|Vale-netrw__fm|
		Inverse fd* selection [_fd].....................|Vale-netrw__fd|
		Print current dir [h].............................|Vale-netrw_h|
		Execute script/program for fm* [bm]..............|Vale-netrw_bm|
		Deleting and corruption for fm* [bm].............|Vale-netrw_bd|
		List fm* [flm]..................................|Vale-netrw_flm|
		List !fd/fd* [fld]..............................|Vale-netrw_fld|
		fm* list flushing [fsm].........................|Vale-netrw_fsm|
		!fd/fd* list flushing [fsd].....................|Vale-netrw_fsd|
		Only some listed fm* flushing [fs#m]...........|Vale-netrw_fs#m|
		fd* list flushing [fsd].........................|Vale-netrw_fsm|
		Only some listed fd* flushing [fs#d]...........|Vale-netrw_fs#d|
		Edit a file by sudo [ff].........................|Vale-netrw_ff|
		Copy fm* to fd* [fc].............................|Vale-netrw_fc|
		Cut fm* to !fd [fv]..............................|Vale-netrw_fv|
		Remove fm* [fR]..................................|Vale-netrw_fR|
		Open term in !fd [ot]............................|Vale-netrw_ot|
		Tear !fm's content in X clipboard [ft]...........|Vale-netrw_ft|
		Make bookmarks list [fu].........................|Vale-netrw_fu|
		Edit bookmarks [fb]..............................|Vale-netrw_fb|
		Bookmarks list flushing.............|Vale-netrw_flush_bookmarks|
		Print bookmarks list [fsb]......................|Vale-netrw_fsb|
		List history [fh]................................|Vale-netrw_fh|
		Flush history.........................|Vale-netrw_flush_history|
		Windows owners.......................|Vale-netrw_windows_owners|
     Disks Manager ValeDisks...................................|Vale-valedisks|
                Mount partitions.................................|Vale-netrw_mo|
                Sleep dk.........................................|Vale-netrw_bo|
		Off all disks....................................|Vale-netrw_ba|
                Umount partitions................................|Vale-netrw_mn|
                Suspend disks....................................|Vale-netrw_bu|
                Eject-Turn off disks.............................|Vale-netrw_bo|
      ValeParted...............................................|Vale-valeparted|
      Vim Driver...............................................|Vale-vim_driver|
	 Starting with Vim Driver...........................|Vale-vdriver_start|
7.  History.......................................................|Vale-history|
8.  Todo.............................................................|Vale-todo|
9.  Credits.......................................................|Vale-credits|
==============================================================================
2. Starting with Valentine		*Vale-start* {{{1

Valentine's art in Vim's art.


==============================================================================
3. Settings				*Valentine-settings* {{{1

Vim settings maganed by Valentine.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
3.1 MAIN SETTINGS			*Vale-main_settings* {{{2
	
	Compatibility (declared by Valentine)
	Encoding: (customizable by user)
	Lines And Columns: (customizable by user)
	Text Formatting: (customizable by user)
	Stdout and Stderr: (customizable by user)
	Command line: (customizable by user)
	X Clipboard: (declared by Valentine)
		To copy from gvim to mlterm:
			copying -> in gvim select the text; 
			pasting ->  in mlterm [Shift-y] or the middle mouse button.
		To copy from a gvim window to another gvim windows:
			copying -> ["+y]
                        pasting -> ["+gP]
		To copy in the same tab:
			copying -> select the text
                        pasting -> press the middle mouse button
                    However I suggest that you use ["+y] and ["+gP].
                        
	Geometry: (declared by Valentine)
	Syntax And Colours: (declared by Valentine)
	File Type: (declared by Valentine)
	
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
3.2 VIM CODING SETTINGS			*Vale-vim_coding_settings* {{{2

	Leader (customizable by user)
	
		
VIMSCRIPT SETTINGS			*Vale-vimscript_settings* {{{2

	Folding methods (customizable by user)


==============================================================================
4. External Plugins 			*external_plugins* {{{1

External plugins are not my products obviously.

	4.1 vim-plug
		https://github.com/junegunn/vim-plug

	4.1.1				*vim-plug* {{{3

		4.1.1.1 Installation

Valentine/install.sh makes it automatically, however here the guide.

~$> cp vim-plg-master/plug.vim ~/.vim/autoload
~$> cp vim-plg-master/doc ~/.vim/doc
~$> vim -c ':helptags ~/.vim/doc' -c :q

~$> mkdir ~/.vim/plugged


		4.1.1.2 Configuring

~$> cat Valentine.vim 
<<
...
call plug#begin('~/.vim/plugged') " Here, the directory that I've generate in
"				    4.1.1.1 Installation
"
""" JavaBrowser; e.g a simple example.
"" Call JavaBrowser only when you need it.
Plug 'vim-scripts/JavaBrowser', { 'on': 'JavaBrowser' }
"
""" tagbar
""" tagbar needs  a manual operation during installation: to copy a plugin in
"" ~/.vim/autoload
"
"" I way: g:tagbar_install
"let g:tagbar_install = 'cp -r autoload/* ~/.vim/autoload'
"Plug 'preservim/tagbar', { 'do': g:tagbar_install, 'on': 'TagbarOpen' }
"
"" II way: direct instance
Plug 'preservim/tagbar', { 'on': 'TagbarOpen', 'do': 'cp -r autoload/* ~/.vim/autoload' }
"
"" For more information, examples, details, see vim-plug/doc.
"
call plug#end()
>>

		4.1.1.3 Usage 
Plugins loading and plugins installation.

			4.1.1.3.1 Plugins installation
First, you have declare them in Valentine.vim, see 4.1.1.2 Configuring;
then, you can install them [without have them in ~/.vim/plugged].


			4.1.1.3.2 Plugins loading
First, you have declare them in Valentine.vim, see 4.1.1.2 Configuring;
then, you can load them.

One at time
e.g.
:PlugInstall tagbar

All  at  once
:PlugInstall

By command line
~$> vim -c ":PlugInstall JavaBrowser"
then, type <:q> twice to exit.


	4.2 tagbar
		https://github.com/preservim/tagbar/tree/master

		4.2.1 universal-ctags (dependency of tagbar)
		https://github.com/universal-ctags/ctags

	4.2.1				*tagbar* {{{3

		4.2.1.1 Installation 

Valentine/install.sh makes it automatically, however here the guide.

			4.2.1.1.1 ctags [dependency of tagbar]

Valentine/install.sh makes it automatically, however here the guide.

				4.2.1.1.1.1 git way

~$> git clone https://github.com/universal-ctags/ctags.git

~$> cd ctags-master

~$> ./autogen.sh

### ./configure --prefix=/where/you/want # defaults to /usr/local
## really, /usr/local/bin
## sudo find / -name ctags
# /usr/local/bin/ctags

~$> ./configure

~$> make

# to install ctags-manual you need root privileges.
~$> sudo make install 



			4.2.1.1.2 tagbar installation

				4.2.1.1.2.1 I way: without vim-plug

~$> alearchiver -u -d. tagbar-master.zip

~$> cd tagbar-master

~$> cp -r autoload/* ~/.vim/autoload

~$> cp plugin/* ~/.vim/plugin

~$> mkdir ~/.vim/syntax 2> /dev/null

~$> cp syntax/* ~/.vim/syntax

~$> cp doc/* ~/.vim/doc

~$> vim -c ':helptags ~/.vim/doc' -c :q


				4.2.1.1.2.2 II way: hybrid [vim-plug but off-
                                            line]

~$> alearchiver -u -d. tagbar-master.zip

~$> cd tagbar-master

~$> cp -r autoload/* ~/.vim/autoload

~$> mkdir -p ~/.vim/plugged/tagbar

~$> cp -r plugin ~/.vim/plugged/tagbar

~$> cp -r syntax ~/.vim/plugged/tagbar

~$> cp doc/* ~/.vim/plugged/tagbar/doc


				4.2.1.1.2.2 II way: by vim-plug, online

a) way:
~$> cat Valentine.vim
<<
...
call plug#begin('~/.vim/plugged')
Plug 'preservim/tagbar'
...
call plug#end()
>>

a.1) way:
:PlugInstall tagbar

cp -r ~/.vim/plugged/tagbar/autoload/* ~/.vim/autoload

a.2) way:
~$> vim -c ":PlugInstall tagbar"
then, you have type <:q> twice to exit.

cp -r ~/.vim/plugged/tagbar/autoload/* ~/.vim/autoload


b) way

~$> cat Valentine.vim
<<
...
call plug#begin('~/.vim/plugged')
...
Plug 'preservim/tagbar', { 'on': 'TagbarOpen', 'do': 'cp -r autoload/* ~/.vim/autoload' }
..
call plug#end()
>>

b.1) 
:PlugInstall tagbar

b.2) automaticamente magari da script
~$> vim -c ":PlugInstall tagbar"
then, you have type <:q> twice to exit.


		4.2.1.2 Configuring

~$> cat Valentine.vim
<<
...
call plug#begin('~/.vim/plugged')
...
Plug 'preservim/tagbar', { 'on': 'TagbarOpen', 'do': 'cp -r autoload/* ~/.vim/autoload' }
..
call plug#end()
>>


		4.2.1.3 Usage 

According to <4.2.2.2 Configuring>
:TagbarOpen

Close the window typing <q>.


==============================================================================
5. Plugins loading			*Vale-plugins_loading* {{{1

	ValentineRuntime.vim (declared by Valentine)


==============================================================================
6. Apps                                 *Vale-apps* {{{1

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
6.1 HEXADECIMAL VIM WRITING		*Vale-hex_vim_writing* {{{2

Compiling and Formatting:
	Managed  by pdflux.  pdflux is not placed in the public domain, it is 
	not a gift for any user.


Settings:
	/usr/share/vim/vim82/colors/hexmart.vim
	/usr/share/vim/vim82/syntax/hexmart.vim
	

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
6.2 VALENTINE IN NETRW                  *Vale-netrw* {{{2

Starting with Valentine in netrw:       *Vale-netrw_start* {{{3

Plugin to manage netrw's art by Valentine's art.

Features:
        Like Disk Manager: it   manages  disks,  partitions  and  it  browses 
        through them acquiring information. 
        Mounts/umounts  one  or  more partitions, of different disks too, all
        at once or only one at a time.
        Umounts, at once, all partitions of one or more disks suspending them
        softly.
        Ejects a CD/DVD or one or more disks, turning off them softly.
        Prints on  file and on stdout the disks/partitions tree with additio-
        nal information.
        Prints detailed information  (UUID,  file system,  free space, total
        space, mount point, label etc.) on  readable files  browsing  through
        partition by ValeDisks.
        
        Like File Manager: it manages files, directories, folders.
	It allows commands, actions among more than one	window too.
	It allows commands, actions for more than one file, for more than one
	directory whatever netrw window is open or is the current.
	It follows strong security standards, in my opinion.
        It manages bookmarks in a different way. 
	Vale-netrw  has  some  additional, useful in my opinion, functionali-
        ties.

	For disk partition table manipulation.
	Using   ValeParted  like   Disk  Manager,  but  without  mounting  in 
        read-write. It is invoked before fdisk manipulation starts.


Reasons To Remark:
Remarking, I have a variegated control and a complete  control	of files/dirs
target for an action.

                To start netrw execute:
        ~$ gvim "directory"

		To start netrw based disk manager ValeDisk, execute:
        ~$ valedisks
        or
        ~$ /usr/local/bin/valedisks


		To start ValeParted 
                (netrw/fdisk disk partition table manipulation), execute:
        ~$ valeparted
        or
        ~$ /usr/local/bin/valeparted


Warnings:                               *Vale-netrw_warnings* {{{3     
        To not press
		Never press [Ctrl-c]
		i.e. if you  are removing a file  and, changing  idea instead 
                typing  <<n>> (to not remove it)  you type  <<y>>, you  can't 
                delete  <<y>> but simply you have to close the  netrw window.
                If you  press [Ctrl-c] you must reboot the system soon to not 
                increase resources loading heavily in vain.  And although you
                could close netrw by << xkill >>,  you could kill the  pid of
                NetrwRMMart.sh, however  NetrwRMMart.sh'll   keep  increasing 
                resources loading if you don't reboot the system.
 
	Windows Owners
		see |Vale-netrw_windows_owners| 


Some Notes About Official Netrw:        *Vale-netrw_some_notes*	  {{{3
                                       
[R]: rename. It doesn't need marked file.

[D]: delete. It doesn't require marked file.
	     It doesn't delete not empty  dir;	Valentine's  brushstroke  [fR]
             deletes not empty dir.

[Shift-mouse left key]: Mark files/dirs by mouse.

[:q]: To quit from an error message printed on the standard error.

Sometimes, not always,  modifiable option comes off even if it is default on;
so when you open a file and you try to open another file or to go up directo-
ry  [in both cases  without  pressing Esc before], in the current  netrw tab, 
you'll get a temporary error message printed on the standard error. 
Press Esc and try again, you'll succeed in it. 

[mf]: 
	mark by mouse -> [Shift-left mouse button]

	mark/unmark files, dirs only one at time but not always: 
	If you try to unmark files  while there are marked dirs, you will un-
        mark dirs too and in this case all  at  once; but then, if you mark a
        dir twice by [mf], you'll mark all dirs again.
        Instead  you may unmark dirs only one at a time if you  don't  unmark 
        files.  
        


Mappings:                               *Vale-netrw_mappings* {{{3     

  
                                        *Vale-netrw_help* {{{4
        HELP AND LEGEND
                                        
<F2>: Help2

        Legend: (To not type)   
                [..]: propedeutic cmd;
                *: all at once;  
                !: only one at a time.

i.e. #1: >
        [mf][fd] 
Direct dest *dirs for cp or !dir for mv.
(See |Vale-netrw_fd| for more details)
                            
i.e. #2: >
       [mf][fm]
       [mf][fd]
       [fc]

Copy fm* to fd* .
(See |Vale-netrw_fc| for more details)



Marking, Remarking, Executing commands:

                                       *Vale-netrw_fn* {{{4
        WRITE AND SAVE A NEW FILE
                                        
fn: New written file            
    official  [%]  doesn't  write a new file, it opens a new file.
    [fn] and [%] are alternative  and  both useful commands, [fn] is the bash
     << touch >> equivalent.


                                       *Vale-netrw_fa* {{{4
        ALL FILES DIRS SELECTION

fa: Select all files/dirs


                                       *Vale-netrw_fm* {{{4
        SOURCE FILES DIRS DIRECT SELECTION
                                        
fm:[mf] Direct remarking about source *file/*dir to cp; mv; rm.
        Means: Mark by [mf] files and/or dirs you want, then  in  the  current
        netrw window type [fm] and they all at once will be remarked.
        You can also add, to the fm* list, other  fm*  remarked  in  different
        netrw windows.
        You'll append these files/directories in a list that you can "analyse"
        typing [flm] (see later [flm]) or flush by [fsm] (see  later  [fsm]).
i.e. >
    [mf][fm]
source files/dirs for cp
        Means: 
             1. mark one or more file/dir by [mf];
             2a. remark files/dirs typing [fm] only once;
             2b. or remark files/dirs repeating [mf][fm] for other files/dirs, 
                 among different netrw windows too.


                                        *Vale-netrw_fd* {{{4
        DESTINATION DIRS DIRECT SELECTION

fd:[mf] Direct remarking about dest dirs for cp or dest !dir for mv.
        Means:
              1.a Mark by [mf] one or more destination dir of a copy,  in  the
                  same netrw window;
              1.b or mark only one destination dir of a  cut  in  the  current
                  netrw window.
              2a. Remark  copy destination dirs typing [fd] only once  in  the
                  same netrw window;
              2b. or  remark cut destination dir typing [fd] in the same netrw
                  window;   
              2c. or, in a case of a copy,  remark dirs repeating [mf][fd] for
                  other dirs, among different netrw windows too.


                                        *Vale-netrw__fm* {{{4
        INVERSE FILES DIRS SELECTION

_fm: 1. [mf][fm] on files/dirs to exclude from selection.
	Warning: fm* folder,  only for that matter,  is  not  necessarily the 
        source  folder; fm* folder is that into generic files and/or directo-
        ries are too.

        
                                        *Vale-netrw__fd* {{{4
        INVERSE DIRS SELECTION

_fd: 1. [mf][fd] on dirs to exclude from selection.
	Warning: fd* folder,  only for that matter, is  not  necessarily  the
        destination folder, fd* folder is that into generic directories are too.


                                        *Vale-netrw_h* {{{4
        CURRENT DIR

h: Printing on the standard output the current folder.
	It is  also  useful to move  the cursor  to the top in one fell swoop,
so to mark/remark the directory speedly too.

                                        *Vale-netrw_bm* {{{4
        BM SCRIPT/PROGRAM EXECUTING

bm:[mf][fm] execute a script/program for fm*.
	Means:	Execute  a script/program  for  all   remarked	source
        files/dirs.

See the example <mls> 
(/usr/local/share/valentine/fileManager/examples/bm/mls).


                                        *Vale-netrw_bd* {{{4
        BD SCRIPT/PROGRAM EXECUTING

bd:[mf][fm] delete and corrupt a remarked source file.


                                        *Vale-netrw_flm* {{{4 
        FMS LIST

flm: List fm*.
        Means: List all remarked files/dirs to copy or to move or to remove.

                                        *Vale-netrw_fld* {{{4
        FDS LIST

fld: List fd*.
        Means: List all remarked destination dirs in  whom  source  files/dirs
               will be copied.
               List the remarked destination dir  in  whom  source  files/dirs
               will be cut.
               List the remarked destination dir in whom to open a terminal.

                                        *Vale-netrw_fsm* {{{4 
        FMS LIST FLUSHING

fsm: Flush fm*.
        Means: Flush  all  remarked  source  files/dirs  that  you've  already
               copied or cut or removed.
               Flush all remarked source files/dirs  that  you've  decided  to
               copy or to cut or to remove, before changing idea.

                                        *Vale-netrw_fs#m* {{{4 
fs#m: Flush only some fm*.
        Means: Flush only some remarked source files/dirs that you've  already
               copied or cut or removed.
               Flush only some remarked source files/dirs that you've  decided
               to copy or to cut or to remove, before changing idea.
                                         
                                        *Vale-netrw_fsd* {{{4
        FDS LIST FLUSHING

fsd: Flush fd*.
        Means: Flush all remarked destination  dirs  in  whom  you've  already
               copied source files/dirs.
               Flush all remarked destination dirs in whom you've  decided  to
               copy source files/dirs, before changing idea.
               Flush the destination dir in whom you've already cut  source
               files/dirs.
               Flush the destination dir in whom you've decide  to cut  source
               files/dirs, before changing idea.
               Flush the destination dir  in  whom  you've  already  opened  a
               terminal.
               Flush the destination dir in whom  you've  decided  to  open  a
               terminal, before changing idea.

                                        *Vale-netrw_fs#d* {{{4
fs#d: Flush only some fd*.
        Means: Flush only some destination dirs in whom you've already  copied
               or cut or removed source files/dirs.
               Flush only some destination dir in whom you've decide  to  copy
               or  to cut or to  remove  source  files/dirs,  before  changing
               idea.

                                        *Vale-netrw_ff* {{{4
        EDIT A FILE BY SUDO

ff:[mf][fm]! edit by sudo.  
        Means: Edit a remarked file opening it by sudo.

                                        *Vale-netrw_fc* {{{4
        COPY FMS TO FDS

fc: Copy fm* to fd*.
	Means: Copy in a shot, all files and/or dirs remarked by [fm]  to  all
	destination dirs remarked by [fd], whatever the netrw window  fm*  and
	fd* belong to, whatever netrw  window  is  open  or  is  the  current.
		If you have not remarked a destination	dir  by  [fd],	you'll
	have to insert destination dirs typing them at the  automatic  intera-
        ctive prompt.

                                        *Vale-netrw_fv* {{{4
        CUT FMS TO FD

fv: mv fm* to !fd.
	Means:	Cut  all  remarked  files/dirs  to  the  only	one   remarked
	destination dir, whatever the netrw window  fm*  and  fd*  belong  to,
	whatever netrw window is open or is the current.
	But according to the official netrw advice: fm*  will be copied first,
	then they  will  be removed: so a  secure files/dirs cutting, a better
        cutting because by cp  mode << preserve=all >> you preserve all attri-
        butes.

                                        *Vale-netrw_fR* {{{4
        DELETE FMS

fR: rm fm*.
        Means: Remove all remarked files/dirs, whatever the netrw  window  fm*
        and fd* belong to, whatever netrw window is open or is the current.
        But be careful: [fR] remove only dirs remarked by [fm] and  not  those
        remarked by [fd].

                                        *Vale-netrw_ot* {{{4
        OPEN TERM IN FD

ot: open term here.
        Means:Open a terminal (pangoterm or mlterm) in the current dir.
    You have to sort by name, by [s], before typing [ot].
    You could change terminal preferences, editing:
    ~/.vim/vimfiles/Valentine/netrw/commands/NetrwCdOT.sh

                                        *Vale-netrw_ft* {{{4
        TEAR IN X CLIPBOARD THE CONTENT OF FM

ft:[fm] tear !fm content in X clipboard.
        Means: Copy to X clipboard what is in the only one  file  remarked  by
        [fm],  whatever the netrw window is open or is the current.
    If you have not installed copyq, this task will be accomplished by vim.    



Bookmarks And History Section:          *Vale-netrw_bookmarks_history*

                                        *Vale-netrw_fu* {{{4
        MAKE BOOKMARKS LIST
fu: make bookmarks.
        Means: Make bookmarks list, 10 is the greatest insertion number.

                                        *Vale-netrw_fb* {{{4
        EDIT BOOKMARKS LIST
fb: edit bookmarks.
        Means: Edit bookmarks list, remember to save the file before to quit.
     
                                        *Vale-netrw_flush_bookmarks* {{{4
        FLUSH BOOKMARKS LIST

No command, manually:   
                     1. Close all vim/gvim  and  netrw windows, the netrw current too;
                     2. Open a terminal and execute (warning, only by terminal):
                        rm -f ~/.vim/.netrwbook

                                        *Vale-netrw_flb* {{{4
        PRINT BOOKMARKS LIST

flb: list bookmarks.
        Means: List all  bookmarks,  the  number  of  every  bookmark  is  the
        indicator to use to change directory back to it.

                                        *Vale-netrw_fh* {{{4
        LIST HISTORY
fh: List        
        Means: List all visited paths.

					*Vale-netrw_flush_history* {{{4
        FLUSH HISTORY
                     1. Close  all  vim/gvim  and  netrw  windows, the  netrw 
                        current too;
                     2. Open a terminal and  execute (warning, only by termi-
                        nal):
                        rm -f ~/.vim/.netrwhist


                                        *Vale-netrw_windows_owners* {{{4
        WINDOWS OWNERS
cc: Recover file mode bits

If you open a netrw window being a normal user, and  you  open	another  netrw
window executing  <<sudo  gvim	...>>  or  being  root,  in  the  same	system
session: Vale-netrw's normal user features will fail. This behavior guarantees
security. But:
	a) If you are an expert user and you want to use both windows  without
Vale-netrw features' failure:
	    i.e. to copy something from root's window to normal user's window;
	    i.e. to cut something from normal user's window to root's window;
	    i.e. to tear something from a file being a normal user;
 	    etc.
	b) If you fell in failure and  you'll  want to use netrw  again  being
           a normal user without rebooting the system

you have to type [cc].
Ownership will be the same in order to see still  file's different owners, but 
file mode bits will be change; so you can use all Vale-netrw features again.


					*Vale-valedisks* {{{2
        DISKS MANAGER VALEDISKS
To execute ValeDisks
~$ valedisks

Meanings 
e.g.

|--/dev/sda
|__/dev/sda1/radice     debian1   ...    /
|__/dev/sda2/           debian2   ...    unmounted
|/                      stocca    ...    unmounted
|__/dev/sda3/mounted    stocca    ...    /mnt/test
|
|--/dev/sdb
|__/dev/sdb1/           data1   ...    unmounted
|__/dev/sdb2/           data2   ...    unmounted
|__/dev/sdb3/mounted    data3   ...    /mnt/data3


<< |/ >> means that << /dev/sda3 >>  is  a  mounted  partition of the
root system disk.


You can export ValeDisks copying /tmp/ValeDisks directory, simply.
A day, in the future when I'll have free time, I'll give the possibi-
lity  to  create,  delete,  format partitions and  to  execute  other
actions. To enjoy good view: you should expand your terminal window. 


Other information, etc.:

° By gvim/netrw ValeDisks

You can read  other  information opening, in  valedisks  gvim/netrw,
<< mounted >> [when the partition is mounted obviously]:

disk
	part
		mounted



° ~$ sudo parted -l

° ~$ sudo fdisk -l

° ~$ lsblk

° ~$ sudo hdparm

° ~$ sdparm

° Mounted devices, not only physical mounted devices
  ~$ sudo mount -l


                                        *Vale-netrw_mo* {{{4
        MOUNT PARTITIONS
mo: [mf][fm] mark and remark partition/s "folder"

Execution of binaries or other type of executables, is not permitted.

If you want to execute a file, mount the partition manually; e.g.
~$> sudo mount /dev/sda2 /mnt/dev1


                                        *Vale-netrw_mn* {{{4
        UMOUNT PARTITIONS
mn: [mf][fm] mark and remark partition/s "folder".


                                        *Vale-netrw_bu* {{{4
        SUSPEND DISKS
bu: [mf][fm] mark and remark disks "folder" [not disk's partitions  "folder"]
to umount and to suspend disks softly
partition/s "folder".


                                        *Vale-netrw_bo* {{{4
        EJECT CD DVD OR EJECT DISKS BY SLEEP MODE
bo: [mf][fm] mark and remark disks "folder" [not disk's partitions  "folder"]
    to umount and to eject disks (cd/dvd or hard disk IDE) softly. 



                                        *Vale-netrw_ba* {{{4
        TURN OFF ALL DISKS
ba: Turn off all disks softly, except:
	- the $PWD disk;
        - the filesystem <</>> disk.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					*Vale-valeparted* {{{2
        DISK PARTITION TABLE MANIPULATION VALEPARTED
An  essential  orderly  disk  partition  table  manipulation,  for ext3, ext4,
fat16, fat32, xfs filesystems.
	To execute ValeParted
~$ valeparted

There could be some matters with fdisk country language and valeparted codex;
valeparted codex is built according to english and italian languages, because 
sometimes  fdisk  communicates  by english language, and  at  other times  by 
italian language. I should install a debian distro from an english mirror, or
you should translate valeparted-codex's <<Nuova partizione>>.

I hope to create a latin dictionary for computer science, so we  could commu-
nicate by the same language; latin  language  is the best "mathematical" lan-
guage of all times.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
6.3 VALENTINE VIM DRIVER		*Vale-vim_driver* {{{2

A Vim walk.

Work in progress.


==============================================================================
7. History				*Vale-history* {{{1

	v1.0.0: Oct 15, 2021	* First version.

	v2.0.0 Feb 27, 2022	* Second version.

	v3.0.0  Jul 08, 2023	* Third version.

				* New feature #1
Added     netrw/fdisk based    disk     partition   table   manipulation,  see 
Vale-valeparted  help.

				* Improvements #1, #2, #3, #4
Improved copy, move/cut, remove/delete input.
	Deleted  superfluous fragments of codex,  due  to lack  of attention,
in input scripts.

				* Improvement #5
Lent more order to "commands filesystem" in ~/.vim.

				* Mistake #1
Corrected an ortographic mistake in
usrLocalShare/diskManager/plugin/Valentine.vim.disk

				* Mistake #2
Corrected "mu unmark all" in
usrLocalShare/fileManager/autoload/netrw.vim.file

				* Mistake #3 
Corrected, and expunged the original "mu map" in
usrLocalShare/diskManager/autoload/netrw.vim.disk

				* Mistake #4
Corrected
usrLocalShare/fileManager/plugin/Valentine.vim.file
homePart/plugin/Valentine.vim.file

there were mapping for valedisks.

				* Mistake #5
valedisks: corrected Vale-netrw_bo, now it turns off not mounted partitions too.

				* Mistake #6
Corrected the filesystem type print when partition is mounted.



_______________

	v3.1.0  Aug 22, 2023

				* Improvement #1
Improved ValeParted.

				* Improvemente #2
Improved  valeparted help [:he Vale-valeparted].

				* Improvemente #3
ValeDisks: added some clarification to the stdout.



_______________

	v3.2.0  Sep 10, 2023

				* Mistake #1
Again, I missed some syntax files.

				* Improvement #1
Added vim-plug plugin, a useful light plugin handler.
	You  have to  read  vim-plug  doc,  some  plugins  need  your  manual 
operation [e.g. see my tagbar directive in Valentine.vim].

				* Improvement #2
Added tagbar plugin, and its dependency universal-ctags.

_______________

	v3.3.0  Sep 13, 2023

				* Improvement #1
Valentine help: added <External plugin> section.


_______________
	
	v3.4.0  Oct 05, 2023

				* Improvement #1
Files copy and cut improved.

				* Improvement #2
! my netrwFileHandlers.vim is xfce4 oriented.

netrwFileHandlers.vim improved

jpeg, JPEG, JPG, md, xml, webp added.

				* Improvement #3
Paragraph settings improved.

				* Improvement #4
reconfigure.sh added.

Now,  to  install  Valentine  package,  you  don't  need  to  install  ctags,
again; you have to execute reconfigure.sh only.

! vimplug, ctags, tagbar are not my products obviously.


_______________
	
	v3.5.0  Feb 04, 2024

				* Correction #1
Valedisks, Umount parts: Restored original netrw [mu]. 
Corrected in Valentine.vim the title of past Valedisks [mu], and [mu] changed
with [mn].

				* Correction #2
ValeNetrw: Bookmarks editing corrected.

				* Improvement #1
ValeNetrw: Given priority to chromium as regard as XML files rendering.

				* Improvement #2
Valedisks: Stdout and stderr, improved.


_______________
	
	v4.0.0  Aug 31, 2024

Various improvements and corrections; new features in ValeParted.

=============================================================================
8. Todo					*Vale-todo* {{{1

If there are  errors  made by me, better and equivalent alternatives to mine, 
I'll be grateful to you for advices.

 
==============================================================================
9. Credits				*Vale-credits* {{{1

	Vim editor				by Bram Moolenaar 

	netrw					by Charles E. Campbell 

	Vale-netrw_mapping [fn]'s content       by vonheikemen
	https://vonheikemen.github.io/devlog/tools/using-netrw-vim-builtin-|
	\file-explorer/

        awk,  bash,  copyq,  coreutils,  mlterm, perl,  printf, sed, vim lan-
        guage  and  all  other  codex orchestra instruments, Valentine  makes
        them play.


==============================================================================
Modelines: {{{1
vim:tw=78:ts=8:ft=help:noet:norl:fdm=marker

